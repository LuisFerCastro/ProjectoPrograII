/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package proyecto_prograii;

import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Stroke;
import java.awt.event.KeyEvent;
import java.io.File;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.crypto.AEADBadTagException;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTree;
import javax.swing.Popup;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.BadLocationException;
import javax.swing.text.Style;
import javax.swing.text.StyleConstants;
import javax.swing.text.StyledDocument;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;
import javax.swing.tree.MutableTreeNode;

/**
 *
 * @author lfern
 */
public class PrincipalProyect extends javax.swing.JFrame {

    /**
     * Creates new form Principal
     */
    public PrincipalProyect() {
        initComponents();
        this.setLocationRelativeTo(null);
        //usuarios.add(new usuario("Luis", "lfcs123", true, true, true, true, true, true));
        /*DefaultListModel modelo = (DefaultListModel)jl_usuarios.getModel();
        modelo.addElement(new usuario("Luis", "lfcs123", true, true, true, true, true, true));
        jl_usuarios.setModel(modelo);*/
        doc = tp_sql.getStyledDocument();
        estilo =tp_sql.addStyle("Estilo", null);
   
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jd_menuprincipal = new javax.swing.JDialog();
        pn_menu = new javax.swing.JPanel();
        lb_tituloMP = new javax.swing.JLabel();
        btn_databases = new javax.swing.JButton();
        btn_GU = new javax.swing.JButton();
        btn_modif = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        pn_exitMP = new javax.swing.JPanel();
        lb_exitMP = new javax.swing.JLabel();
        jd_gestionUsuarios = new javax.swing.JDialog();
        pn_GU = new javax.swing.JPanel();
        lb_tituloGU = new javax.swing.JLabel();
        lb_nombreGU = new javax.swing.JLabel();
        tf_crear = new javax.swing.JTextField();
        lb_contraGU = new javax.swing.JLabel();
        pf_crear = new javax.swing.JPasswordField();
        pn_exitGU = new javax.swing.JPanel();
        lb_exitGU = new javax.swing.JLabel();
        chb_GU = new javax.swing.JCheckBox();
        jSeparator3 = new javax.swing.JSeparator();
        jSeparator4 = new javax.swing.JSeparator();
        lb_permisosGU = new javax.swing.JLabel();
        chb_create = new javax.swing.JCheckBox();
        chb_select = new javax.swing.JCheckBox();
        chb_insert = new javax.swing.JCheckBox();
        chb_delete = new javax.swing.JCheckBox();
        chb_drop = new javax.swing.JCheckBox();
        btn_agregarUsuario = new javax.swing.JButton();
        btn_eliminarUsuario = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jd_modificarUsuario = new javax.swing.JDialog();
        pn_modificar = new javax.swing.JPanel();
        pn_exitMU = new javax.swing.JPanel();
        lb_exitMU = new javax.swing.JLabel();
        lb_tituloMU = new javax.swing.JLabel();
        lb_nombreMU = new javax.swing.JLabel();
        lb_contraMU = new javax.swing.JLabel();
        tf_modificar = new javax.swing.JTextField();
        pf_modificar = new javax.swing.JPasswordField();
        jSeparator5 = new javax.swing.JSeparator();
        jSeparator6 = new javax.swing.JSeparator();
        img_MU = new javax.swing.JLabel();
        btn_modificarU = new javax.swing.JButton();
        jd_databases = new javax.swing.JDialog();
        pn_DB = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jt_db = new javax.swing.JTree();
        jScrollPane4 = new javax.swing.JScrollPane();
        jtable_db = new javax.swing.JTable();
        lb_tituloDB = new javax.swing.JLabel();
        btn_ejecutar = new javax.swing.JButton();
        lb_sql = new javax.swing.JLabel();
        pn_exitDB = new javax.swing.JPanel();
        lb_exitDB = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        tp_sql = new javax.swing.JTextPane();
        btn_diagramar = new javax.swing.JButton();
        jd_SQL = new javax.swing.JDialog();
        jPanel1 = new javax.swing.JPanel();
        pn_exitSQL = new javax.swing.JPanel();
        lb_exitSQL = new javax.swing.JLabel();
        cb_SQL = new javax.swing.JComboBox<>();
        btn_SQL = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        pp_diagramar = new javax.swing.JPopupMenu();
        jmi_limpiar = new javax.swing.JMenuItem();
        jd_diagramar = new javax.swing.JDialog();
        PanelDiagrama = new javax.swing.JPanel();
        jp_is = new javax.swing.JPanel();
        lb_tituloIS = new javax.swing.JLabel();
        lb_nombreIS = new javax.swing.JLabel();
        lb_passwordIS = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        pf_contraIS = new javax.swing.JPasswordField();
        jSeparator2 = new javax.swing.JSeparator();
        bttn_entrar = new javax.swing.JButton();
        tf_nombreIS = new javax.swing.JTextField();
        img_IS1 = new javax.swing.JLabel();
        pn_exitIS = new javax.swing.JPanel();
        lb_exitIS = new javax.swing.JLabel();

        jd_menuprincipal.setUndecorated(true);
        jd_menuprincipal.setResizable(false);

        lb_tituloMP.setFont(new java.awt.Font("Segoe UI", 3, 24)); // NOI18N
        lb_tituloMP.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lb_tituloMP.setText("MENU PRINCIPAL");

        btn_databases.setBackground(new java.awt.Color(204, 0, 102));
        btn_databases.setForeground(new java.awt.Color(0, 0, 0));
        btn_databases.setText("Mis Databases");
        btn_databases.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_databasesMouseClicked(evt);
            }
        });

        btn_GU.setBackground(new java.awt.Color(255, 153, 153));
        btn_GU.setForeground(new java.awt.Color(0, 0, 0));
        btn_GU.setText("Gestion de Usuarios");
        btn_GU.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_GUMouseClicked(evt);
            }
        });

        btn_modif.setBackground(new java.awt.Color(255, 51, 102));
        btn_modif.setForeground(new java.awt.Color(0, 0, 0));
        btn_modif.setText("Modificar mi Usuario");
        btn_modif.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_modifMouseClicked(evt);
            }
        });

        jLabel1.setIcon(new javax.swing.ImageIcon("C:\\Users\\lfern\\OneDrive\\Im√°genes\\Que-es-una-Base-de-Datos_Latam-Dominios.jpg")); // NOI18N

        pn_exitMP.setBackground(new java.awt.Color(255, 255, 255));

        lb_exitMP.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lb_exitMP.setForeground(new java.awt.Color(0, 0, 0));
        lb_exitMP.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lb_exitMP.setText("X");
        lb_exitMP.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lb_exitMPMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lb_exitMPMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lb_exitMPMouseExited(evt);
            }
        });

        javax.swing.GroupLayout pn_exitMPLayout = new javax.swing.GroupLayout(pn_exitMP);
        pn_exitMP.setLayout(pn_exitMPLayout);
        pn_exitMPLayout.setHorizontalGroup(
            pn_exitMPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lb_exitMP, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 49, Short.MAX_VALUE)
        );
        pn_exitMPLayout.setVerticalGroup(
            pn_exitMPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lb_exitMP, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 42, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout pn_menuLayout = new javax.swing.GroupLayout(pn_menu);
        pn_menu.setLayout(pn_menuLayout);
        pn_menuLayout.setHorizontalGroup(
            pn_menuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pn_menuLayout.createSequentialGroup()
                .addGroup(pn_menuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pn_menuLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(lb_tituloMP, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(46, 46, 46))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pn_menuLayout.createSequentialGroup()
                        .addContainerGap(34, Short.MAX_VALUE)
                        .addGroup(pn_menuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btn_modif, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_GU, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_databases, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18))
                    .addGroup(pn_menuLayout.createSequentialGroup()
                        .addComponent(pn_exitMP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        pn_menuLayout.setVerticalGroup(
            pn_menuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pn_menuLayout.createSequentialGroup()
                .addComponent(pn_exitMP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(17, 17, 17)
                .addComponent(lb_tituloMP)
                .addGap(49, 49, 49)
                .addComponent(btn_GU, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(49, 49, 49)
                .addComponent(btn_modif, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(56, 56, 56)
                .addComponent(btn_databases, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jd_menuprincipalLayout = new javax.swing.GroupLayout(jd_menuprincipal.getContentPane());
        jd_menuprincipal.getContentPane().setLayout(jd_menuprincipalLayout);
        jd_menuprincipalLayout.setHorizontalGroup(
            jd_menuprincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pn_menu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jd_menuprincipalLayout.setVerticalGroup(
            jd_menuprincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pn_menu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jd_gestionUsuarios.setUndecorated(true);
        jd_gestionUsuarios.setResizable(false);
        jd_gestionUsuarios.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lb_tituloGU.setFont(new java.awt.Font("Segoe UI", 3, 36)); // NOI18N
        lb_tituloGU.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lb_tituloGU.setText("Gestion de Usuarios");

        lb_nombreGU.setText("Nombre");

        lb_contraGU.setText("Contrase√±a");

        pn_exitGU.setBackground(new java.awt.Color(255, 255, 255));

        lb_exitGU.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        lb_exitGU.setForeground(new java.awt.Color(0, 0, 0));
        lb_exitGU.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lb_exitGU.setText("X");
        lb_exitGU.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lb_exitGUMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lb_exitGUMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lb_exitGUMouseExited(evt);
            }
        });

        javax.swing.GroupLayout pn_exitGULayout = new javax.swing.GroupLayout(pn_exitGU);
        pn_exitGU.setLayout(pn_exitGULayout);
        pn_exitGULayout.setHorizontalGroup(
            pn_exitGULayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lb_exitGU, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 49, Short.MAX_VALUE)
        );
        pn_exitGULayout.setVerticalGroup(
            pn_exitGULayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lb_exitGU, javax.swing.GroupLayout.DEFAULT_SIZE, 41, Short.MAX_VALUE)
        );

        chb_GU.setText("Gestionar Usuarios");

        lb_permisosGU.setText("Permisos de Usuario de Menu Principal");

        chb_create.setText("Create");

        chb_select.setText("Select");

        chb_insert.setText("Insert/Consulta");

        chb_delete.setText("Delete");

        chb_drop.setText("Drop");

        btn_agregarUsuario.setText("Agregar Usuario");
        btn_agregarUsuario.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_agregarUsuarioMouseClicked(evt);
            }
        });

        btn_eliminarUsuario.setText("Eliminar Algun Usuario");
        btn_eliminarUsuario.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_eliminarUsuarioMouseClicked(evt);
            }
        });

        jLabel2.setIcon(new javax.swing.ImageIcon("C:\\Users\\lfern\\OneDrive\\Im√°genes\\imgUser.png")); // NOI18N

        javax.swing.GroupLayout pn_GULayout = new javax.swing.GroupLayout(pn_GU);
        pn_GU.setLayout(pn_GULayout);
        pn_GULayout.setHorizontalGroup(
            pn_GULayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pn_GULayout.createSequentialGroup()
                .addGap(84, 84, 84)
                .addComponent(lb_tituloGU, javax.swing.GroupLayout.PREFERRED_SIZE, 481, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 107, Short.MAX_VALUE)
                .addComponent(pn_exitGU, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19))
            .addGroup(pn_GULayout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addGroup(pn_GULayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pn_GULayout.createSequentialGroup()
                        .addGroup(pn_GULayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pn_GULayout.createSequentialGroup()
                                .addComponent(chb_select, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(66, 66, 66)
                                .addComponent(chb_insert, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(lb_nombreGU, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(pn_GULayout.createSequentialGroup()
                        .addGroup(pn_GULayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(pn_GULayout.createSequentialGroup()
                                .addGroup(pn_GULayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(pn_GULayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addGroup(pn_GULayout.createSequentialGroup()
                                            .addComponent(chb_delete, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(chb_drop, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pn_GULayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(chb_create, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(lb_permisosGU, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(pn_GULayout.createSequentialGroup()
                                        .addGap(36, 36, 36)
                                        .addComponent(btn_agregarUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btn_eliminarUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pn_GULayout.createSequentialGroup()
                                .addGroup(pn_GULayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(chb_GU, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lb_contraGU, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(pn_GULayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(jSeparator4, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(pf_crear, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 290, Short.MAX_VALUE))
                                    .addGroup(pn_GULayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(jSeparator3, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(tf_crear, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 288, Short.MAX_VALUE)))
                                .addGap(53, 53, 53)
                                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(115, 115, 115))))
        );
        pn_GULayout.setVerticalGroup(
            pn_GULayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pn_GULayout.createSequentialGroup()
                .addGroup(pn_GULayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pn_GULayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lb_tituloGU))
                    .addComponent(pn_exitGU, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(lb_nombreGU)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pn_GULayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pn_GULayout.createSequentialGroup()
                        .addComponent(tf_crear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(13, 13, 13)
                        .addComponent(lb_contraGU)
                        .addGap(18, 18, 18)
                        .addComponent(pf_crear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lb_permisosGU)
                        .addGap(20, 20, 20)
                        .addGroup(pn_GULayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(chb_GU)
                            .addComponent(chb_create)))
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pn_GULayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pn_GULayout.createSequentialGroup()
                        .addGroup(pn_GULayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(chb_select)
                            .addComponent(chb_insert))
                        .addGap(18, 18, 18)
                        .addGroup(pn_GULayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(chb_delete)
                            .addComponent(chb_drop))
                        .addGap(53, 53, 53)
                        .addComponent(btn_agregarUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btn_eliminarUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(80, Short.MAX_VALUE))
        );

        jd_gestionUsuarios.getContentPane().add(pn_GU, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 720, 560));

        jd_modificarUsuario.setUndecorated(true);
        jd_modificarUsuario.setResizable(false);
        jd_modificarUsuario.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        pn_exitMU.setBackground(new java.awt.Color(255, 255, 255));

        lb_exitMU.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lb_exitMU.setForeground(new java.awt.Color(0, 0, 0));
        lb_exitMU.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lb_exitMU.setText("X");
        lb_exitMU.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lb_exitMUMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lb_exitMUMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lb_exitMUMouseExited(evt);
            }
        });

        javax.swing.GroupLayout pn_exitMULayout = new javax.swing.GroupLayout(pn_exitMU);
        pn_exitMU.setLayout(pn_exitMULayout);
        pn_exitMULayout.setHorizontalGroup(
            pn_exitMULayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lb_exitMU, javax.swing.GroupLayout.DEFAULT_SIZE, 52, Short.MAX_VALUE)
        );
        pn_exitMULayout.setVerticalGroup(
            pn_exitMULayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lb_exitMU, javax.swing.GroupLayout.DEFAULT_SIZE, 49, Short.MAX_VALUE)
        );

        lb_tituloMU.setFont(new java.awt.Font("Segoe UI", 3, 24)); // NOI18N
        lb_tituloMU.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lb_tituloMU.setText("Modificar Mi Usuario");

        lb_nombreMU.setText("Nuevo nombre");

        lb_contraMU.setText("Nueva contrase√±a");

        img_MU.setIcon(new javax.swing.ImageIcon("C:\\Users\\lfern\\OneDrive\\Im√°genes\\usobasedatos-768x432.jpg")); // NOI18N

        btn_modificarU.setText("Modificar");
        btn_modificarU.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_modificarUMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout pn_modificarLayout = new javax.swing.GroupLayout(pn_modificar);
        pn_modificar.setLayout(pn_modificarLayout);
        pn_modificarLayout.setHorizontalGroup(
            pn_modificarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pn_modificarLayout.createSequentialGroup()
                .addGroup(pn_modificarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pn_modificarLayout.createSequentialGroup()
                        .addComponent(pn_exitMU, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lb_tituloMU, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pn_modificarLayout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addGroup(pn_modificarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tf_modificar, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lb_nombreMU, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lb_contraMU, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(pf_modificar, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSeparator6, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(pn_modificarLayout.createSequentialGroup()
                        .addGap(67, 67, 67)
                        .addComponent(btn_modificarU, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(img_MU, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(153, Short.MAX_VALUE))
        );
        pn_modificarLayout.setVerticalGroup(
            pn_modificarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pn_modificarLayout.createSequentialGroup()
                .addGroup(pn_modificarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pn_exitMU, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pn_modificarLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lb_tituloMU)))
                .addGap(18, 18, 18)
                .addComponent(lb_nombreMU)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tf_modificar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lb_contraMU)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(pf_modificar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator6, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btn_modificarU, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(73, Short.MAX_VALUE))
            .addComponent(img_MU, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );

        jd_modificarUsuario.getContentPane().add(pn_modificar, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, 380));

        jd_databases.setUndecorated(true);
        jd_databases.setResizable(false);

        javax.swing.tree.DefaultMutableTreeNode treeNode1 = new javax.swing.tree.DefaultMutableTreeNode("Databases");
        jt_db.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));
        jt_db.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jt_dbMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jt_db);

        jtable_db.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane4.setViewportView(jtable_db);

        lb_tituloDB.setFont(new java.awt.Font("Segoe UI", 3, 24)); // NOI18N
        lb_tituloDB.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lb_tituloDB.setText("Mis Databases");

        btn_ejecutar.setText("Ejecutar Comando SQL");
        btn_ejecutar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_ejecutarMouseClicked(evt);
            }
        });

        lb_sql.setText("SQL");

        pn_exitDB.setBackground(new java.awt.Color(255, 255, 255));

        lb_exitDB.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lb_exitDB.setForeground(new java.awt.Color(0, 0, 0));
        lb_exitDB.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lb_exitDB.setText("X");
        lb_exitDB.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lb_exitDBMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lb_exitDBMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lb_exitDBMouseExited(evt);
            }
        });

        javax.swing.GroupLayout pn_exitDBLayout = new javax.swing.GroupLayout(pn_exitDB);
        pn_exitDB.setLayout(pn_exitDBLayout);
        pn_exitDBLayout.setHorizontalGroup(
            pn_exitDBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pn_exitDBLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(lb_exitDB, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        pn_exitDBLayout.setVerticalGroup(
            pn_exitDBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lb_exitDB, javax.swing.GroupLayout.DEFAULT_SIZE, 36, Short.MAX_VALUE)
        );

        tp_sql.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tp_sqlKeyPressed(evt);
            }
        });
        jScrollPane5.setViewportView(tp_sql);

        btn_diagramar.setText("Diagramar");
        btn_diagramar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_diagramarMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout pn_DBLayout = new javax.swing.GroupLayout(pn_DB);
        pn_DB.setLayout(pn_DBLayout);
        pn_DBLayout.setHorizontalGroup(
            pn_DBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pn_DBLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(pn_DBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pn_DBLayout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addComponent(lb_tituloDB, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(37, 37, 37)
                        .addComponent(btn_diagramar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(pn_exitDB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pn_DBLayout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(lb_sql, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 68, Short.MAX_VALUE)
                        .addComponent(btn_ejecutar, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(46, 46, 46))
                    .addGroup(pn_DBLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pn_DBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 447, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())))
        );
        pn_DBLayout.setVerticalGroup(
            pn_DBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pn_DBLayout.createSequentialGroup()
                .addGroup(pn_DBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pn_DBLayout.createSequentialGroup()
                        .addGroup(pn_DBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pn_DBLayout.createSequentialGroup()
                                .addGroup(pn_DBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(pn_DBLayout.createSequentialGroup()
                                        .addComponent(lb_tituloDB, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(9, 9, 9))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pn_DBLayout.createSequentialGroup()
                                        .addComponent(btn_diagramar)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                                .addGroup(pn_DBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lb_sql)
                                    .addComponent(btn_ejecutar)))
                            .addComponent(pn_exitDB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 383, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 493, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jd_databasesLayout = new javax.swing.GroupLayout(jd_databases.getContentPane());
        jd_databases.getContentPane().setLayout(jd_databasesLayout);
        jd_databasesLayout.setHorizontalGroup(
            jd_databasesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pn_DB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jd_databasesLayout.setVerticalGroup(
            jd_databasesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pn_DB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jd_SQL.setUndecorated(true);
        jd_SQL.setResizable(false);

        jPanel1.setBackground(new java.awt.Color(0, 102, 102));

        pn_exitSQL.setBackground(new java.awt.Color(255, 255, 255));

        lb_exitSQL.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lb_exitSQL.setForeground(new java.awt.Color(0, 0, 0));
        lb_exitSQL.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lb_exitSQL.setText("X");
        lb_exitSQL.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lb_exitSQLMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lb_exitSQLMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lb_exitSQLMouseExited(evt);
            }
        });

        javax.swing.GroupLayout pn_exitSQLLayout = new javax.swing.GroupLayout(pn_exitSQL);
        pn_exitSQL.setLayout(pn_exitSQLLayout);
        pn_exitSQLLayout.setHorizontalGroup(
            pn_exitSQLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lb_exitSQL, javax.swing.GroupLayout.DEFAULT_SIZE, 43, Short.MAX_VALUE)
        );
        pn_exitSQLLayout.setVerticalGroup(
            pn_exitSQLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lb_exitSQL, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
        );

        btn_SQL.setBackground(new java.awt.Color(51, 51, 51));
        btn_SQL.setForeground(new java.awt.Color(255, 255, 255));
        btn_SQL.setText("Seleccionar SQL");
        btn_SQL.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_SQLMouseClicked(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Berlin Sans FB Demi", 0, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Comandos SQLs Ejecutados");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(70, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(44, 44, 44)
                        .addComponent(pn_exitSQL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(cb_SQL, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(51, 51, 51))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(btn_SQL, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(99, 99, 99))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(pn_exitSQL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(39, 39, 39)
                .addComponent(cb_SQL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41)
                .addComponent(btn_SQL, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(57, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jd_SQLLayout = new javax.swing.GroupLayout(jd_SQL.getContentPane());
        jd_SQL.getContentPane().setLayout(jd_SQLLayout);
        jd_SQLLayout.setHorizontalGroup(
            jd_SQLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        jd_SQLLayout.setVerticalGroup(
            jd_SQLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jd_SQLLayout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jmi_limpiar.setText("Limpiar");
        jmi_limpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmi_limpiarActionPerformed(evt);
            }
        });
        pp_diagramar.add(jmi_limpiar);

        PanelDiagrama.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                PanelDiagramaMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout PanelDiagramaLayout = new javax.swing.GroupLayout(PanelDiagrama);
        PanelDiagrama.setLayout(PanelDiagramaLayout);
        PanelDiagramaLayout.setHorizontalGroup(
            PanelDiagramaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 586, Short.MAX_VALUE)
        );
        PanelDiagramaLayout.setVerticalGroup(
            PanelDiagramaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 420, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jd_diagramarLayout = new javax.swing.GroupLayout(jd_diagramar.getContentPane());
        jd_diagramar.getContentPane().setLayout(jd_diagramarLayout);
        jd_diagramarLayout.setHorizontalGroup(
            jd_diagramarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(PanelDiagrama, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jd_diagramarLayout.setVerticalGroup(
            jd_diagramarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(PanelDiagrama, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lb_tituloIS.setFont(new java.awt.Font("Segoe UI", 3, 24)); // NOI18N
        lb_tituloIS.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lb_tituloIS.setText("Iniciar Sesion");

        lb_nombreIS.setText("Nombre");

        lb_passwordIS.setText("Contrase√±a");

        bttn_entrar.setText("Entrar");
        bttn_entrar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bttn_entrarMouseClicked(evt);
            }
        });

        img_IS1.setIcon(new javax.swing.ImageIcon("C:\\Users\\lfern\\OneDrive\\Im√°genes\\√Ålbum de c√°mara\\databases.jpg")); // NOI18N

        pn_exitIS.setBackground(new java.awt.Color(255, 255, 255));

        lb_exitIS.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lb_exitIS.setForeground(new java.awt.Color(0, 0, 0));
        lb_exitIS.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lb_exitIS.setText("X");
        lb_exitIS.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lb_exitISMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lb_exitISMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lb_exitISMouseExited(evt);
            }
        });

        javax.swing.GroupLayout pn_exitISLayout = new javax.swing.GroupLayout(pn_exitIS);
        pn_exitIS.setLayout(pn_exitISLayout);
        pn_exitISLayout.setHorizontalGroup(
            pn_exitISLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lb_exitIS, javax.swing.GroupLayout.DEFAULT_SIZE, 41, Short.MAX_VALUE)
        );
        pn_exitISLayout.setVerticalGroup(
            pn_exitISLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lb_exitIS, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 37, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jp_isLayout = new javax.swing.GroupLayout(jp_is);
        jp_is.setLayout(jp_isLayout);
        jp_isLayout.setHorizontalGroup(
            jp_isLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jp_isLayout.createSequentialGroup()
                .addComponent(img_IS1, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jp_isLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jp_isLayout.createSequentialGroup()
                        .addGroup(jp_isLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jp_isLayout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addGroup(jp_isLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(pf_contraIS, javax.swing.GroupLayout.PREFERRED_SIZE, 334, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 344, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lb_passwordIS, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 344, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(tf_nombreIS, javax.swing.GroupLayout.PREFERRED_SIZE, 333, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lb_nombreIS, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jp_isLayout.createSequentialGroup()
                                .addGap(64, 64, 64)
                                .addComponent(bttn_entrar, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(9, Short.MAX_VALUE))
                    .addGroup(jp_isLayout.createSequentialGroup()
                        .addGap(65, 65, 65)
                        .addComponent(lb_tituloIS, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jp_isLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(pn_exitIS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );
        jp_isLayout.setVerticalGroup(
            jp_isLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jp_isLayout.createSequentialGroup()
                .addComponent(pn_exitIS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21)
                .addComponent(lb_tituloIS, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lb_nombreIS)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tf_nombreIS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 3, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lb_passwordIS)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(pf_contraIS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(57, 57, 57)
                .addComponent(bttn_entrar, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jp_isLayout.createSequentialGroup()
                .addComponent(img_IS1, javax.swing.GroupLayout.PREFERRED_SIZE, 451, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        getContentPane().add(jp_is, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 690, 440));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bttn_entrarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bttn_entrarMouseClicked
        // TODO add your handling code here:
        File prob = new File("./usuarios/"+tf_nombreIS.getText()+".txt");
        if (prob.exists()){
            AdmUsuario user = new AdmUsuario("./usuarios/"+tf_nombreIS.getText()+".txt");
            try {
                user.cargarArchivo();
            } catch (IOException ex) {
                ex.printStackTrace();
            }
            if (user.getListaUsuarios().get(0).getContra().equals(pf_contraIS.getText())){
                FileSeleccionado = "./usuarios/"+tf_nombreIS.getText()+".txt";
                nombre_user = tf_nombreIS.getText();
                
                File tree = new File("./"+nombre_user+"/Jtree");
                if(tree.exists()){
                    Adm_Trees at = new Adm_Trees("./"+nombre_user+"/Jtree");
                    at.cargarArchivo();
                    DefaultTreeModel m = (DefaultTreeModel)jt_db.getModel();
                    DefaultMutableTreeNode raiz = (DefaultMutableTreeNode) m.getRoot();
                    
                }
                DefaultTreeModel m = (DefaultTreeModel)jt_db.getModel();
                DefaultMutableTreeNode raiz = (DefaultMutableTreeNode) m.getRoot();
                raiz.removeAllChildren();
                DefaultMutableTreeNode b;
                File ac = new File("./"+tf_nombreIS.getText()+"/");
                for (File d : ac.listFiles()) {
                    if(d.getName().equals("Jtree")){
                        
                    }
                    else{
                        
                        b = new DefaultMutableTreeNode(d.getName());
                        raiz.add(b);
                    }
                }
                m.reload();
                DefaultTableModel original = new DefaultTableModel(new Object[]{"Column 1", "Column 2"}, 0);
                jtable_db.setModel(original);
                abreMenuPrincipal();
            }else{
                JOptionPane.showMessageDialog(jp_is, "Contrase√±a Incorrecta");
            }
        }else{
            JOptionPane.showMessageDialog(jp_is, "El usuario no existe");
        }
        
        tf_nombreIS.setText("");
        pf_contraIS.setText("");
    }//GEN-LAST:event_bttn_entrarMouseClicked

    private void lb_exitISMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lb_exitISMouseClicked
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_lb_exitISMouseClicked

    private void lb_exitISMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lb_exitISMouseEntered
        // TODO add your handling code here:
        pn_exitIS.setBackground(Color.red);
        lb_exitIS.setForeground(Color.white);
    }//GEN-LAST:event_lb_exitISMouseEntered

    private void lb_exitISMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lb_exitISMouseExited
        // TODO add your handling code here:
        pn_exitIS.setBackground(Color.white);
        lb_exitIS.setForeground(Color.black);
    }//GEN-LAST:event_lb_exitISMouseExited

    private void lb_exitMPMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lb_exitMPMouseClicked
        // TODO add your handling code here:
        jd_menuprincipal.setVisible(false);
        this.setVisible(true);
    }//GEN-LAST:event_lb_exitMPMouseClicked

    private void lb_exitMPMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lb_exitMPMouseEntered
        // TODO add your handling code here:
        pn_exitMP.setBackground(Color.red);
        lb_exitMP.setForeground(Color.white);
    }//GEN-LAST:event_lb_exitMPMouseEntered

    private void lb_exitMPMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lb_exitMPMouseExited
        // TODO add your handling code here:
        pn_exitMP.setBackground(Color.white);
        lb_exitMP.setForeground(Color.black);
    }//GEN-LAST:event_lb_exitMPMouseExited

    private void lb_exitGUMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lb_exitGUMouseClicked
        // TODO add your handling code here:
        jd_gestionUsuarios.setVisible(false);
        jd_menuprincipal.setVisible(true);
        
    }//GEN-LAST:event_lb_exitGUMouseClicked

    private void lb_exitGUMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lb_exitGUMouseEntered
        // TODO add your handling code here:
        pn_exitGU.setBackground(Color.red);
        lb_exitGU.setForeground(Color.white);
    }//GEN-LAST:event_lb_exitGUMouseEntered

    private void lb_exitGUMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lb_exitGUMouseExited
        // TODO add your handling code here:
        pn_exitGU.setBackground(Color.white);
        lb_exitGU.setForeground(Color.black);
    }//GEN-LAST:event_lb_exitGUMouseExited

    private void btn_agregarUsuarioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_agregarUsuarioMouseClicked
        // TODO add your handling code here:
        
        try {
            String nombre = tf_crear.getText();
            String contra = pf_crear.getText();
            boolean gestionU = false;
            if(chb_GU.isSelected()){
                gestionU = true;
            }
            boolean create = false;
            if(chb_create.isSelected()){
                create = true;
            }
            boolean select = false;
            if(chb_select.isSelected()){
                select = true;
            }
            boolean insert = false;
            if(chb_insert.isSelected()){
                insert = true;
            }
            boolean delete = false;
            if(chb_delete.isSelected()){
                delete = true;
            }
            boolean drop = false;
            if(chb_drop.isSelected()){
                drop = true;
            }
            //usuarios.add(new usuario(nombre, contra, gestionU, create, select, insert, delete, drop));
            /*DefaultListModel m = (DefaultListModel)jl_usuarios.getModel();
            m.addElement(new usuario(nombre, contra, gestionU, create, select, insert, delete, drop));
            
            jl_usuarios.setModel(m);*/
            tf_crear.setText("");
            pf_crear.setText("");
            chb_GU.setSelected(false);
            chb_create.setSelected(false);
            chb_delete.setSelected(false);
            chb_drop.setSelected(false);
            chb_insert.setSelected(false);
            chb_select.setSelected(false);
            AdmUsuario am = new AdmUsuario("./usuarios/"+nombre+".txt");
            am.listaUsuarios.add(new usuario(nombre, contra, gestionU, create, select, insert, delete, drop));
            am.escribirArchivo();
            File archivo = new File("./"+nombre);
            boolean creado = archivo.mkdir();
            if(creado){
                JOptionPane.showMessageDialog(jd_gestionUsuarios, "Se ha creado el usuario!");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(jd_gestionUsuarios, "No se ha podido agregar usuario.");
        }
    }//GEN-LAST:event_btn_agregarUsuarioMouseClicked

    private void btn_eliminarUsuarioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_eliminarUsuarioMouseClicked
        // TODO add your handling code here:
        JFileChooser jfc = new JFileChooser("./usuarios");
        int seleccion = jfc.showOpenDialog(jd_gestionUsuarios);
       
        if (seleccion == JFileChooser.APPROVE_OPTION) {
            File archivo = jfc.getSelectedFile();
            String nom = archivo.getName();
            String nom_directory = archivo.getName().replace(".txt", "");
            String cadena[]=nom.split("\\.");
            String comparar = cadena[0];
            if (comparar.equals(nombre_user)){
                JOptionPane.showMessageDialog(jd_gestionUsuarios,"No puedes eliminar a tu propio usuario");
            }
            else{
                
                boolean eliminado = archivo.delete();
                File archivo2 = new File("./"+nom_directory);
                boolean eliminado2 = archivo2.delete();
                if(eliminado && eliminado2){
                    JOptionPane.showMessageDialog(jd_gestionUsuarios, "Se ha eliminado el archivo!");
                }else{
                    JOptionPane.showMessageDialog(jd_gestionUsuarios, "No se ha podido eliminar el archivo!");
                }
            }
        }
        
    }//GEN-LAST:event_btn_eliminarUsuarioMouseClicked

    private void btn_GUMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_GUMouseClicked
        // TODO add your handling code here:
        AdmUsuario am = new AdmUsuario(FileSeleccionado);
        boolean gestionarU = false;
        try {
            am.cargarArchivo();
        } catch (IOException ex) {
            
        }
        for (usuario user : am.getListaUsuarios()) {
            gestionarU = user.gestionU;
        }
        
        if(gestionarU==false){
            JOptionPane.showMessageDialog(jd_menuprincipal, "Este usuario no tiene permisos para gestionar usuarios!");
        }else{
           abreGestionUsuarios();   
        }
    }//GEN-LAST:event_btn_GUMouseClicked

    private void lb_exitMUMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lb_exitMUMouseClicked
        // TODO add your handling code here:
        jd_menuprincipal.setVisible(true);
        jd_modificarUsuario.setVisible(false);
    }//GEN-LAST:event_lb_exitMUMouseClicked

    private void lb_exitMUMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lb_exitMUMouseEntered
        // TODO add your handling code here:
        pn_exitMU.setBackground(Color.red);
        lb_exitMU.setForeground(Color.white);
    }//GEN-LAST:event_lb_exitMUMouseEntered

    private void lb_exitMUMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lb_exitMUMouseExited
        // TODO add your handling code here:
        pn_exitMU.setBackground(Color.white);
        lb_exitMU.setForeground(Color.black);
    }//GEN-LAST:event_lb_exitMUMouseExited

    private void btn_modifMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_modifMouseClicked
        // TODO add your handling code here:
        abreModificarUsuario();
    }//GEN-LAST:event_btn_modifMouseClicked

    private void btn_modificarUMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_modificarUMouseClicked
        // TODO add your handling code here:
        AdmUsuario am = new AdmUsuario(FileSeleccionado);
        try {
            am.cargarArchivo();
        } catch (IOException ex) {
            
        }
        String nuevo_nombre = tf_modificar.getText();
        String nueva_contra = pf_modificar.getText();
        
       
        for (usuario User : am.getListaUsuarios()) {
            User.setNombre(nuevo_nombre);
            User.setContra(nueva_contra);
        }
        try {
            am.escribirArchivo();
        } catch (IOException ex) {
            
        }
        String nombre = nombre_user;
        File archivoantiguo = new File(FileSeleccionado);
        File archivonuevonombre = new File("./usuarios/"+nuevo_nombre+".txt");
        boolean renombrado = archivoantiguo.renameTo(archivonuevonombre);
        File directory_antiguo = new File("./"+nombre);
        File directory_nuevo = new File("./"+nuevo_nombre);
        boolean renombrado2 = directory_antiguo.renameTo(directory_nuevo);
        if(renombrado && renombrado2){
            JOptionPane.showMessageDialog(jd_modificarUsuario, "Se ha modificado exitosamente.");
        }else{
            JOptionPane.showMessageDialog(jd_modificarUsuario, "No se ha podido modificar!");
        }
        FileSeleccionado = "./usuarios/"+nuevo_nombre+".txt";
        nombre_user = nuevo_nombre;
       
        //jl_usuarios.setModel(m);
        tf_modificar.setText("");
        pf_modificar.setText("");
    }//GEN-LAST:event_btn_modificarUMouseClicked

    private void lb_exitDBMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lb_exitDBMouseClicked
        // TODO add your handling code here:
        jd_menuprincipal.setVisible(true);
        jd_databases.setVisible(false);
    }//GEN-LAST:event_lb_exitDBMouseClicked

    private void lb_exitDBMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lb_exitDBMouseEntered
        // TODO add your handling code here:
        pn_exitDB.setBackground(Color.red);
        lb_exitDB.setForeground(Color.white);
    }//GEN-LAST:event_lb_exitDBMouseEntered

    private void lb_exitDBMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lb_exitDBMouseExited
        // TODO add your handling code here:
        pn_exitDB.setBackground(Color.white);
        lb_exitDB.setForeground(Color.black);
    }//GEN-LAST:event_lb_exitDBMouseExited

    private void btn_databasesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_databasesMouseClicked
        // TODO add your handling code here:
        abreDatabase();
    }//GEN-LAST:event_btn_databasesMouseClicked

    private void tp_sqlKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tp_sqlKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode()== KeyEvent.VK_SPACE) {
            doc = tp_sql.getStyledDocument();
            String texto = tp_sql.getText();
            Color crimson = new Color(220,20,60);
            StyleConstants.setForeground(estilo, crimson);
            
            String Regexpattern ="\\b("+String.join("|", keywords)+")\\b";
            Pattern pattern = Pattern.compile(Regexpattern, Pattern.CASE_INSENSITIVE);
            Matcher matcher = pattern.matcher(texto);
            
            while(matcher.find()){
                int inicio = matcher.start();
                int Final = matcher.end();
                String coincidencia = texto.substring(inicio, Final);
                
                try {
                    doc.remove(inicio, Final-inicio);
                    doc.insertString(inicio, coincidencia.toUpperCase(), null);
                    doc.setCharacterAttributes(inicio, Final-inicio, estilo, false);
                } catch (Exception e) {
                }
            }
        }
    }//GEN-LAST:event_tp_sqlKeyPressed

    private void btn_ejecutarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_ejecutarMouseClicked
        // TODO add your handling code here:
        String texto = tp_sql.getText();
        String separador[] = texto.split(" ");
        if (tp_sql.getText().contains("CREATE DATABASE")){           
            if(separador.length < 3||separador.length >3){
                JOptionPane.showMessageDialog(jd_databases, "Comando SQL incorrecto!");
            }else{
                String nombre_db = separador[2];
                File ndb = new File("./"+nombre_user+"/"+nombre_db);
                boolean directory = ndb.mkdir();
                if(directory){
                    JOptionPane.showMessageDialog(jd_databases, "Se ha creado la database!");
                }else{
                    JOptionPane.showMessageDialog(jd_databases, "No se ha creado la database!");
                }
                Adm_Trees at = new Adm_Trees("./"+nombre_user+"/Jtree");
                DefaultTreeModel modelo = (DefaultTreeModel)jt_db.getModel();
                DefaultMutableTreeNode raiz = (DefaultMutableTreeNode) modelo.getRoot();
                raiz.add(new DefaultMutableTreeNode(new Database(nombre_db)));
                //raiz.add(new DefaultMutableTreeNode(ndb));  
                at.cargarArchivo();
                at.arbol = new Trees(modelo);
                //at.jtrees.add(new Trees(modelo));
                at.escribirArchivo();
                modelo.reload();
                jt_db.setModel(modelo);
                File sql = new File("./"+nombre_user+"/SQL");
                Adm_SQL sq = new Adm_SQL("./"+nombre_user+"/SQL");
                if(sql.exists()){
                    sq.cargarArchivo();
                    sq.sqls.add(texto);
                    sq.escribirArchivo();
                }else{
                    sq.escribirArchivo();
                    sq.cargarArchivo();
                    sq.sqls.add(texto);
                    sq.escribirArchivo();
                }
                     
            }
            
        }
        else if (tp_sql.getText().contains("DROP DATABASE")){
            if(separador.length < 3||separador.length >3){
                JOptionPane.showMessageDialog(jd_databases, "Comando SQL incorrecto!");
            }else{
                
                String nombreDB = separador[2];
                File usr = new File("./"+nombre_user+"/"+nombreDB);
                if (usr.exists()){
                    if (usr.delete()){
                        File fh = new File("./usuarios/");
                        for (File c : fh.listFiles()) {
                            if(c.getName().equals(nombre_user+".txt")){
                                
                            }
                            else{
                                String tx = c.getName().substring(0, c.getName().length()-4);
                                File x = new File("./"+tx+"/"+nombreDB);
                                if (x.exists()){
                                    if(x.delete()){
                                        AdmUsuario l = new AdmUsuario("./usuarios"+"/"+tx+".txt");
                                        try {
                                            l.cargarArchivo();
                                        } catch (IOException ex) {
                                            ex.printStackTrace();
                                        }
                                            for (Database h : l.getListaUsuarios().get(0).getDatabases()) {
                                                if (h.getNameDB().equals(nombreDB)){
                                                    l.getListaUsuarios().get(0).getDatabases().remove(h);
                                                    break;
                                                }
                                            }

                                        try {
                                            l.escribirArchivo();
                                        } catch (IOException ex) {
                                            ex.printStackTrace();
                                        }
                                    }
                                }
                            }
                        }
                        tp_sql.setText(""); 
                        DefaultTreeModel m = (DefaultTreeModel)jt_db.getModel();
                        DefaultMutableTreeNode raiz = (DefaultMutableTreeNode) m.getRoot();
                        raiz.removeAllChildren();
                        DefaultMutableTreeNode b;
                        File ac = new File("./"+tf_nombreIS.getText()+"/");
                        for (File d : ac.listFiles()) {
                            if(d.getName().equals("Jtree")){

                            }
                            else{

                                b = new DefaultMutableTreeNode(d.getName());
                                raiz.add(b);
                            }
                        }
                        m.reload();        
                        JOptionPane.showMessageDialog(jd_databases, "El archivo fue eliminado con exito");
                        AdmUsuario l = new AdmUsuario("./usuarios"+"/"+nombre_user+".txt");
                    try {
                        l.cargarArchivo();
                    } catch (IOException ex) {
                        ex.printStackTrace();
                    }
                        for (Database h : l.getListaUsuarios().get(0).getDatabases()) {
                            if (h.getNameDB().equals(nombreDB)){
                                l.getListaUsuarios().get(0).getDatabases().remove(h);
                                break;
                            }
                        }
                            
                    try {
                        l.escribirArchivo();
                    } catch (IOException ex) {
                        ex.printStackTrace();
                    }
                    File sql = new File("./"+nombre_user+"/SQL");
                    Adm_SQL sq = new Adm_SQL("./"+nombre_user+"/SQL");
                    if(sql.exists()){
                        sq.cargarArchivo();
                        sq.sqls.add(texto);
                        sq.escribirArchivo();
                    }else{
                        sq.escribirArchivo();
                        sq.cargarArchivo();
                        sq.sqls.add(texto);
                        sq.escribirArchivo();
                    }
                    }else{
                        JOptionPane.showMessageDialog(jd_databases, "El archivo no se pudo eliminar");
                    }
                }
                else{
                    JOptionPane.showMessageDialog(jd_databases, "El archivo no existe");
                }
            }
            tp_sql.setText("");
        }
        else if (tp_sql.getText().contains("GRANT DATABASE")){
            if(separador.length < 5||separador.length >5){
                JOptionPane.showMessageDialog(jd_databases, "Comando SQL incorrecto!");
            }else{
                String nombre_dar = separador[4];
                String nombredb = separador[2];
                File gg = new File("./"+nombre_dar+"/"+nombredb);
                if(gg.exists()){
                    JOptionPane.showMessageDialog(jd_databases, "El usuario seleccionado ya tiene esta database");
                }
                else{
                    File ac = new File("./"+nombre_user+"/"+nombredb);
                    if (ac.exists()){
                        if(nombre_user.equals(nombre_dar)){
                            JOptionPane.showMessageDialog(jd_databases, "Ya tienes acceso a este archivo");
                        }else{
                            File ac2 = new File("./usuarios/"+nombre_dar+".txt");
                            if (ac2.exists()){
                                File ac3 = new File("./"+nombre_dar+"/"+nombredb);
                                boolean directory = ac3.mkdir();
                                if (directory){
                                    AdmUsuario l = new AdmUsuario("./usuarios"+"/"+nombre_dar+".txt");
                                    try {
                                        l.cargarArchivo();
                                    } catch (IOException ex) {
                                        ex.printStackTrace();
                                    }
                                    Database d = new Database(nombredb);
                                    d.getPermisos().add(new Permisos(true,true,true,true));
                                    l.getListaUsuarios().get(0).getDatabases().add(d);
                                    try {
                                        l.escribirArchivo();
                                    } catch (IOException ex) {
                                        ex.printStackTrace();
                                    }
                                    DefaultTreeModel m = (DefaultTreeModel)jt_db.getModel();
                                    DefaultMutableTreeNode raiz = (DefaultMutableTreeNode) m.getRoot();
                                    raiz.removeAllChildren();
                                    DefaultMutableTreeNode b;
                                    File ac4 = new File("./"+tf_nombreIS.getText()+"/");
                                    for (File h : ac4.listFiles()) {
                                        if(h.getName().equals("Jtree")){

                                        }
                                        else{

                                            b = new DefaultMutableTreeNode(h.getName());
                                            raiz.add(b);
                                        }
                                    }
                                    m.reload();
//                                    Adm_Trees at = new Adm_Trees("./"+nombre_dar+"/Jtree");
//                                    DefaultTreeModel modelo = (DefaultTreeModel)jt_db.getModel();
//                                    DefaultMutableTreeNode raiz = (DefaultMutableTreeNode) modelo.getRoot();
//                                    raiz.add(new DefaultMutableTreeNode(ac3.getName()));
//                                    at.cargarArchivo();
//                                    at.jtrees.add(new Trees(modelo));
//                                    at.escribirArchivo();
//                                    modelo.reload();
//                                    jt_db.setModel(modelo);
                                    File sql = new File("./"+nombre_user+"/SQL");
                                    Adm_SQL sq = new Adm_SQL("./"+nombre_user+"/SQL");
                                    if(sql.exists()){
                                        sq.cargarArchivo();
                                        sq.sqls.add(texto);
                                        sq.escribirArchivo();
                                    }else{
                                        sq.escribirArchivo();
                                        sq.cargarArchivo();
                                        sq.sqls.add(texto);
                                        sq.escribirArchivo();
                                    }
                                    JOptionPane.showMessageDialog(jd_databases, "Se a compartido el database con exito");
                                }
                                else{
                                    JOptionPane.showMessageDialog(jd_databases, "No se a podido compartir el database");
                                }
                            }else{
                                JOptionPane.showMessageDialog(jd_databases, "El usuario que "
                                        + "le quiere transferir la database no existe");
                            }

                        }
                    }
                    else{
                        JOptionPane.showMessageDialog(jd_databases, "El archivo que intentas dar acceso no existe");
                    }
                }
                tp_sql.setText("");
            }
        }else if(tp_sql.getText().contains("CREATE TABLE")){
            if(separador.length < 3||separador.length >3){
                JOptionPane.showMessageDialog(jd_databases, "Comando SQL incorrecto!");
            }else{
                if(database_seleccionado != null){
                    if(database_seleccionado.exists()){
                        if(database_seleccionado.isDirectory()){
                            Date fecha = new Date();
                            SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
                            String fecha_actual = sdf.format(fecha);
                            String text = separador[2];
                            Pattern nombre = Pattern.compile("\\w+(?=\\()");
                            Matcher m = nombre.matcher(text);
                            String nombreTabla ="";
                            if(m.find()){
                                nombreTabla = m.group();
                                System.out.println(nombreTabla);
                            }
                            AdmTable AT = new AdmTable("./"+nombre_user+"/"+nombre_actual+"/"+nombreTabla);
                            
                            Pattern PAtributos = Pattern.compile("\\b(\\w+)\\b(?=[,)])");
                            Matcher MAtributos = PAtributos.matcher(separador[2]);
                            ArrayList<String> encontrados = new ArrayList();
                            AT.tablas.add(new Table(nombreTabla, nombre_user, fecha_actual));
                            boolean encontrado = MAtributos.find();
                            if(!encontrado){
                                JOptionPane.showMessageDialog(jd_databases, "No ha puesto atributos!");
                            }else{
                                encontrados.add(MAtributos.group(1));
                                while(MAtributos.find()){
                                encontrados.add(MAtributos.group(1));
                                //AT.tablas.get(0).atributos.add(MAtributos.group(1));
                                   
                                }
                                
                                AT.tablas.get(0).setAtributos(encontrados);
                                AT.escribirArchivo();
                                Adm_Trees at = new Adm_Trees("./"+nombre_user+"/Jtree");
                                at.cargarArchivo();
                                AT.leerTabla();
                                //File tabla_creada = new File("./"+nombre_user+"/"+nombre_actual+"/"+nombreTabla);
                                DefaultTreeModel modelo = (DefaultTreeModel)jt_db.getModel();
                                DefaultMutableTreeNode raiz = (DefaultMutableTreeNode) modelo.getRoot();
                                for (int i = 0; i < raiz.getChildCount(); i++) {
                                    if(raiz.getChildAt(i).toString().equals(nombre_actual)){
                                        DefaultMutableTreeNode padre = (DefaultMutableTreeNode) raiz.getChildAt(i);
                                        padre.add(new DefaultMutableTreeNode(AT.tablas.get(0)));
                                        
                                    }
                                }
                                modelo.reload();
                                //at.jtrees.clear();
                                //at.jtrees.add(new Trees(modelo));
                                at.arbol = new Trees(modelo);
                                at.escribirArchivo();
                                jt_db.setModel(modelo);
                                File sql = new File("./"+nombre_user+"/SQL");
                                Adm_SQL sq = new Adm_SQL("./"+nombre_user+"/SQL");
                                if(sql.exists()){
                                    sq.cargarArchivo();
                                    sq.sqls.add(texto);
                                    sq.escribirArchivo();
                                }else{
                                    sq.escribirArchivo();
                                    sq.cargarArchivo();
                                    sq.sqls.add(texto);
                                    sq.escribirArchivo();
                                }
                                JOptionPane.showMessageDialog(jd_databases, "Se ha creado la Tabla exitosamente!");     
                            }
                            
                        }else{
                            JOptionPane.showMessageDialog(jd_databases, "El elemento seleccionado no es un database!");
                        }
                    }else{
                        JOptionPane.showMessageDialog(jd_databases,"No existe el database seleccionado.");
                    }
                }else{
                    JOptionPane.showMessageDialog(jd_databases, "No ha seleccionado ningun database!");
                }    
            }
        }else if(tp_sql.getText().contains("INSERT INTO")&&tp_sql.getText().contains("VALUES")){
            if(separador.length < 4||separador.length >4){
                JOptionPane.showMessageDialog(jd_databases, "Comando SQL incorrecto!");
            }else{
                if(database_seleccionado != null){
                    String text = separador[3];
                    String nombreTabla = separador[2];
                    System.out.println(nombreTabla);
                    File tabla_insertar = new File("./"+nombre_user+"/"+nombre_actual+"/"+nombreTabla);
                    if(tabla_insertar.exists()){
                        AdmTable AT = new AdmTable("./"+nombre_user+"/"+nombre_actual+"/"+nombreTabla);
                        AT.leerTabla();
                        DefaultTableModel m = AT.getModelo();
                        int cant_columnas = m.getColumnCount();
                        Pattern PAtributos = Pattern.compile("\\(([^)]+)\\)");
                        Matcher MAtributos = PAtributos.matcher(text);
                        ArrayList<String>detalles = new ArrayList();
                        while(MAtributos.find()){
                            String []campos = MAtributos.group(1).split(",");
                            for (String campo : campos) {
                                detalles.add(campo);
                            }
                        }

                        if(detalles.size()>cant_columnas){
                            JOptionPane.showMessageDialog(jd_databases, "Ha sobrepasado la cantidad de columnas en la tabla!");
                        }else{
                            String[]datos = detalles.toArray(String[]::new);
                            AT.tablas.get(0).getDatos().add(datos);
                            AT.escribirArchivo();
                            File sql = new File("./"+nombre_user+"/SQL");
                            Adm_SQL sq = new Adm_SQL("./"+nombre_user+"/SQL");
                            if(sql.exists()){
                                sq.cargarArchivo();
                                sq.sqls.add(texto);
                                sq.escribirArchivo();
                            }else{
                                sq.escribirArchivo();
                                sq.cargarArchivo();
                                sq.sqls.add(texto);
                                sq.escribirArchivo();
                            }
                            JOptionPane.showMessageDialog(jd_databases, "Se ha insertado la informacion!");  
                        }
                        
                    }else{
                        JOptionPane.showMessageDialog(jd_databases, "La tabla que ha escrito no existe!");
                    }             
                }else{
                    JOptionPane.showMessageDialog(jd_databases, "No ha escogido ningun database!");
                }
                    
            }
        }else if(tp_sql.getText().contains("SELECT")&&tp_sql.getText().contains("FROM")&& tp_sql.getText().contains("WHERE")){
            
        }else if(tp_sql.getText().contains("SELECT")&&tp_sql.getText().contains("FROM")){
            
        }else if(tp_sql.getText().contains("UPDATE")&&tp_sql.getText().contains("SET") && tp_sql.getText().contains("WHERE")){
            if(separador.length < 6||separador.length >6){
                JOptionPane.showMessageDialog(jd_databases, "Comando SQL incorrecto!");
            }else{
                if(database_seleccionado != null){
                    String nombre = separador[1];
                    String argumento = separador[3];
                    String where = separador[5];
                    try {
                        String []sepArg = argumento.split("=");
                        String []sepWhere = where.split("=");
                        String name_Campo = sepArg[0];

                        String nuevo_value = sepArg[1];

                        String name_Value = sepWhere[0];

                        String nameBuscar = sepWhere[1];

                        int index_a_cambiar = -1;
                        int cont = 0;
                        File tabla = new File("./"+nombre_user+"/"+nombre_actual+"/"+nombre);
                        if(tabla.exists()){
                            AdmTable at = new AdmTable("./"+nombre_user+"/"+nombre_actual+"/"+nombre);
                            at.leerTabla();
                            DefaultTableModel modelo = at.getModelo();
                            
                            
                            for (int i = 0; i < modelo.getColumnCount(); i++) {
                                if(modelo.getColumnName(i).equalsIgnoreCase(name_Campo)){
                                    index_a_cambiar = i;
                                    cont++;
                                    if(cont==2){
                                        break;
                                    }
                                }else if(modelo.getColumnName(i).equalsIgnoreCase(name_Value)){
                                    cont++;
                                    if(cont==2){
                                        break;
                                    }
                                }
                                
                            }
                            if(cont ==2){
                                Table m = at.tablas.get(0);
                                for (String[] dato : m.datos) {
                                    for (int i = 0; i < dato.length; i++) {
                                        if(dato[i].equals(nameBuscar)){
                                            dato[index_a_cambiar] = nuevo_value;
                                        }
                                    }
                                    /*for (String s : dato) {
                                        if(s.equals(nameBuscar)){
                                            dato[index_a_cambiar] = nuevo_value;
                                        }
                                    }*/
                                }
                                at.tablas.set(0, m);
                                at.escribirArchivo();
                                File sql = new File("./"+nombre_user+"/SQL");
                                Adm_SQL sq = new Adm_SQL("./"+nombre_user+"/SQL");
                                if(sql.exists()){
                                    sq.cargarArchivo();
                                    sq.sqls.add(texto);
                                    sq.escribirArchivo();
                                }else{
                                    sq.escribirArchivo();
                                    sq.cargarArchivo();
                                    sq.sqls.add(texto);
                                    sq.escribirArchivo();
                                }
                                JOptionPane.showMessageDialog(jd_databases, "Se ha modificado la informacion!");
                            }else{
                                JOptionPane.showMessageDialog(jd_databases, "Ha proporcionado un argumento incorrecto!");
                            }
                            
                        }else{
                            JOptionPane.showMessageDialog(jd_databases,"No existe la tabla!");
                        }
                        
                    } catch (Exception e) {
                        JOptionPane.showMessageDialog(jd_databases, "Error con el formato del comando!");
                    }
                    
                    
                }else{
                    JOptionPane.showMessageDialog(jd_databases, "No ha seleccionado un database!");
                }
            }
        }else if(tp_sql.getText().contains("DELETE FROM")&&tp_sql.getText().contains("WHERE")){
             if(separador.length < 5||separador.length >5){
                JOptionPane.showMessageDialog(jd_databases, "Comando SQL incorrecto!");
            }else{
                if(database_seleccionado != null){
                    try {
                        String nombreTabla = separador[2];
                        String campo = separador[4];
                        String nombre_Campo = null;
                        String operador = null;
                        String valor = null;
                        
                        Pattern patron = Pattern.compile("(\\w+)([><=])(\\d+|\\w+)");
                        Matcher m = patron.matcher(campo);
                        
                        if(m.matches()){
                            nombre_Campo = m.group(1);
                            System.out.println(nombre_Campo);
                            operador = m.group(2);
                            System.out.println(operador);
                            valor = m.group(3);
                            System.out.println(valor);
                            int cont = 0;
                            File Table = new File("./"+nombre_user+"/"+nombre_actual+"/"+nombreTabla);
                        
                            if(Table.exists()){
                                AdmTable at = new AdmTable("./"+nombre_user+"/"+nombre_actual+"/"+nombreTabla);
                                at.leerTabla();
                                DefaultTableModel modelTabla = at.getModelo();
                                for (int i = 0; i < modelTabla.getColumnCount(); i++) {
                                    if(modelTabla.getColumnName(i).equalsIgnoreCase(nombre_Campo)){
                                        cont++;
                                        if(cont == 1){
                                            break;
                                        }
                                    }
                                }
                                if(cont == 1){
                                    Table tabla = at.tablas.get(0);
                                    ArrayList<String[]> nuevaLista = new ArrayList();
                                    for (String[] dato : tabla.datos) {
                                        boolean mantener = false;
                                        for (int i = 0; i < dato.length; i++) {
                                            String data = dato[i];
                                            if(esEntero(data)){
                                                int num = Integer.parseInt(data);
                                                int valorInt = Integer.parseInt(valor);
                                                if (operador.equals("=") && num == valorInt) {
                                                    mantener = true;
                                                    break;
                                                } else if (operador.equals(">") && num > valorInt) {
                                                    mantener = true;
                                                    break;
                                                } else if (operador.equals("<") && num < valorInt) {
                                                    mantener = true;
                                                    break;
                                                }
                                            }else{
                                                if (operador.equals("=") && dato.equals(valor)) {
                                                    mantener = true;
                                                    break;
                                                }
                                            }
                                            if (mantener) {
                                                nuevaLista.add(dato); // Agregar el registro a la nueva lista
                                            }
                                        }
                                    }
                                    
                                    tabla.setDatos(nuevaLista);
                                    at.tablas.set(0, tabla);
                                    at.escribirArchivo();
                                    File sql = new File("./"+nombre_user+"/SQL");
                                    Adm_SQL sq = new Adm_SQL("./"+nombre_user+"/SQL");
                                    if(sql.exists()){
                                        sq.cargarArchivo();
                                        sq.sqls.add(texto);
                                        sq.escribirArchivo();
                                    }else{
                                        sq.escribirArchivo();
                                        sq.cargarArchivo();
                                        sq.sqls.add(texto);
                                        sq.escribirArchivo();
                                    }
                                    JOptionPane.showMessageDialog(jd_databases, "Registro eliminado!");
                                }
                                
                            }else{
                                JOptionPane.showMessageDialog(jd_databases, "No existe esa tabla!");
                            }
                        }else{
                            //JOptionPane.showMessageDialog(jd_databases, "Comando SQL incorrecto!");
                        }
                        
                    } catch (Exception e) {
                        JOptionPane.showMessageDialog(jd_databases, "Error en el comando!");
                    }
                    
                }else{
                    JOptionPane.showMessageDialog(jd_databases, "No ha seleccionado un database!");
                }
             }
        }else if(tp_sql.getText().contains("TRUNCATE TABLE")){
             if(separador.length < 3||separador.length >3){
                JOptionPane.showMessageDialog(jd_databases, "Comando SQL incorrecto!");
            }else{
                 if(database_seleccionado != null){
                     String nombre = separador[2];
                        File tabla = new File("./"+nombre_user+"/"+nombre_actual+"/"+nombre);
                        if(tabla.exists()){
                            AdmTable at = new AdmTable("./"+nombre_user+"/"+nombre_actual+"/"+nombre);
                            at.leerTabla();
                            at.tablas.get(0).datos.clear();
                            at.escribirArchivo();
                            boolean deleted = tabla.delete();
                            if(deleted){
                                
                            }else{
                                JOptionPane.showMessageDialog(jd_databases, "No se ha podido eliminar la tabla!");
                            }
                            File sql = new File("./"+nombre_user+"/SQL");
                            Adm_SQL sq = new Adm_SQL("./"+nombre_user+"/SQL");
                            if(sql.exists()){
                                sq.cargarArchivo();
                                sq.sqls.add(texto);
                                sq.escribirArchivo();
                            }else{
                                sq.escribirArchivo();
                                sq.cargarArchivo();
                                sq.sqls.add(texto);
                                sq.escribirArchivo();
                            }
                        }else{
                            JOptionPane.showMessageDialog(jd_databases, "La tabla que ha proporcionado no existe!");
                        }
                 }else{
                     JOptionPane.showMessageDialog(jd_databases, "No ha seleccionado ningun database!");
                 }  
             }
        }else if(tp_sql.getText().contains("DROP TABLE")){
            if(separador.length < 3||separador.length >3){
                JOptionPane.showMessageDialog(jd_databases, "Comando SQL incorrecto!");
            }else{
                if(database_seleccionado != null){
                    String nombre = separador[2];
                    DefaultTreeModel m = (DefaultTreeModel)jt_db.getModel();
                    DefaultMutableTreeNode raiz = (DefaultMutableTreeNode) m.getRoot();
                    for (int i = 0; i < raiz.getChildCount(); i++) {
                        if(raiz.getChildAt(i).toString().equals(nombre_actual)){
                            for (int j = 0; j < raiz.getChildAt(i).getChildCount(); j++) {
                                if(raiz.getChildAt(i).getChildAt(j).toString().equals(nombre)){
                                    m.removeNodeFromParent((MutableTreeNode) raiz.getChildAt(i).getChildAt(j));
                                }
                            }
                        }
                    }
                    m.reload();
                    File sql = new File("./"+nombre_user+"/SQL");
                    Adm_SQL sq = new Adm_SQL("./"+nombre_user+"/SQL");
                    if(sql.exists()){
                        sq.cargarArchivo();
                        sq.sqls.add(texto);
                        sq.escribirArchivo();
                    }else{
                        sq.escribirArchivo();
                        sq.cargarArchivo();
                        sq.sqls.add(texto);
                        sq.escribirArchivo();
                    }
                }else{
                    JOptionPane.showMessageDialog(jd_databases, "No ha seleccionado ningun database!");
                }
            } 
        }else{
            JOptionPane.showMessageDialog(jd_databases, "Comando SQL incorrecto");
        }
        tp_sql.setText("");
    }//GEN-LAST:event_btn_ejecutarMouseClicked

    public static boolean esEntero(String cadena) {
        try {
            Integer.parseInt(cadena);
            return true;
        } catch (NumberFormatException e) {
            return false;
        }
    }
    private void jt_dbMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jt_dbMouseClicked
        // TODO add your handling code here:
        DefaultTreeModel m = (DefaultTreeModel) jt_db.getModel();
        DefaultMutableTreeNode raiz = (DefaultMutableTreeNode) m.getRoot();
        int row = jt_db.getClosestRowForLocation(evt.getX(), evt.getY());
        jt_db.setSelectionRow(row);
        Object v1 = jt_db.getSelectionPath().getLastPathComponent();
        nodo_seleccionado = (DefaultMutableTreeNode) v1;  
        nombre_actual = nodo_seleccionado.getUserObject().toString();
        if(nombre_actual.equals("SQL")||nombre_actual.equals("./"+nombre_user+"/SQL")){
            Adm_SQL ad = new Adm_SQL("./"+nombre_user+"/SQL");
            ad.cargarArchivo();
            DefaultComboBoxModel modelo = (DefaultComboBoxModel) cb_SQL.getModel();
            modelo.removeAllElements();
            modelo.addAll(ad.sqls);
            cb_SQL.setModel(modelo);
            abreSQL();
        }else if(nodo_seleccionado.getChildCount() == 0 && !raiz.isNodeChild(nodo_seleccionado)){
            DefaultMutableTreeNode padre = (DefaultMutableTreeNode) nodo_seleccionado.getParent();
            padre_name = padre.getUserObject().toString();
            System.out.println(padre_name);
            System.out.println(nombre_actual);
            DefaultTableModel original = new DefaultTableModel(new Object[]{"Column 1", "Column 2"}, 0);
            jtable_db.setModel(original);
            table_actual = new File("./"+nombre_user+"/"+padre_name+"/"+nombre_actual);
            AdmTable at = new AdmTable("./"+nombre_user+"/"+padre_name+"/"+nombre_actual);
            at.leerTabla();
            DefaultTableModel modelo = at.getModelo();
            jtable_db.setModel(modelo);
        }else if(nodo_seleccionado.getChildCount()>=0 && raiz.isNodeChild(nodo_seleccionado)){
            database_seleccionado = new File("./"+nombre_user+"/"+nombre_actual);
            System.out.println(database_seleccionado);
        }
        
    }//GEN-LAST:event_jt_dbMouseClicked

    private void lb_exitSQLMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lb_exitSQLMouseClicked
        // TODO add your handling code here:
        jd_SQL.setVisible(false);
    }//GEN-LAST:event_lb_exitSQLMouseClicked

    private void lb_exitSQLMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lb_exitSQLMouseEntered
        // TODO add your handling code here:
        pn_exitSQL.setBackground(Color.red);
        lb_exitSQL.setForeground(Color.white);
    }//GEN-LAST:event_lb_exitSQLMouseEntered

    private void lb_exitSQLMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lb_exitSQLMouseExited
        // TODO add your handling code here:
        pn_exitSQL.setBackground(Color.white);
        lb_exitSQL.setForeground(Color.black);
    }//GEN-LAST:event_lb_exitSQLMouseExited

    private void btn_SQLMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_SQLMouseClicked
        // TODO add your handling code here:
        if(cb_SQL.getSelectedItem() != null){
            String linea = (String) cb_SQL.getSelectedItem();
            tp_sql.setText(linea);
            jd_SQL.setVisible(false);
        }else{
            JOptionPane.showMessageDialog(jd_SQL, "No ha seleccionado nada!");
        }
    }//GEN-LAST:event_btn_SQLMouseClicked

    private void btn_diagramarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_diagramarMouseClicked
        // TODO add your handling code here:
        jd_diagramar.pack();
        jd_diagramar.setModal(true);
        jd_diagramar.setLocationRelativeTo(jd_databases);
        jd_diagramar.setVisible(true);
    }//GEN-LAST:event_btn_diagramarMouseClicked

    private void jmi_limpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmi_limpiarActionPerformed
        // TODO add your handling code here:
        PanelDiagrama.repaint();
        PanelDiagrama.removeAll();
    }//GEN-LAST:event_jmi_limpiarActionPerformed

    private void PanelDiagramaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PanelDiagramaMouseClicked
        // TODO add your handling code here:
        if(evt.getButton()==3){
            pp_diagramar.show(PanelDiagrama, evt.getX(), evt.getY());
        }else{
            Stroke stroke = new BasicStroke(5f);
            if(startX == -1 && startY == -1){
                startX = evt.getX();
                startY = evt.getY();
            }else{
                Graphics grafico = PanelDiagrama.getGraphics();
                Graphics2D graficos2 = (Graphics2D)grafico;
                graficos2.setStroke(stroke);
                graficos2.drawLine(startX, startY, evt.getX(), evt.getY());
                startX = -1;
                startY = -1;
            }
        }
    }//GEN-LAST:event_PanelDiagramaMouseClicked
    
    public void abreMenuPrincipal(){
        jd_menuprincipal.pack();
        jd_menuprincipal.setModal(true);
        jd_menuprincipal.setLocationRelativeTo(this);
        jd_menuprincipal.setVisible(true);
    }
    public void abreGestionUsuarios(){
        jd_gestionUsuarios.pack();
        jd_gestionUsuarios.setModal(true);
        jd_gestionUsuarios.setLocationRelativeTo(jd_menuprincipal);
        jd_gestionUsuarios.setVisible(true);
    }
    
    public void abreModificarUsuario(){
        jd_modificarUsuario.pack();
        jd_modificarUsuario.setModal(true);
        jd_modificarUsuario.setLocationRelativeTo(jd_menuprincipal);
        jd_modificarUsuario.setVisible(true);
    }
    public void abreDatabase(){
        jd_databases.pack();
        jd_databases.setModal(true);
        jd_databases.setLocationRelativeTo(jd_menuprincipal);
        jd_databases.setVisible(true);
    }
    public void abreSQL(){
        jd_SQL.pack();
        jd_SQL.setModal(true);
        jd_SQL.setLocationRelativeTo(jd_databases);
        jd_SQL.setVisible(true);
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PrincipalProyect.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PrincipalProyect.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PrincipalProyect.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PrincipalProyect.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PrincipalProyect().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel PanelDiagrama;
    private javax.swing.JButton btn_GU;
    private javax.swing.JButton btn_SQL;
    private javax.swing.JButton btn_agregarUsuario;
    private javax.swing.JButton btn_databases;
    private javax.swing.JButton btn_diagramar;
    private javax.swing.JButton btn_ejecutar;
    private javax.swing.JButton btn_eliminarUsuario;
    private javax.swing.JButton btn_modif;
    private javax.swing.JButton btn_modificarU;
    private javax.swing.JButton bttn_entrar;
    private javax.swing.JComboBox<String> cb_SQL;
    private javax.swing.JCheckBox chb_GU;
    private javax.swing.JCheckBox chb_create;
    private javax.swing.JCheckBox chb_delete;
    private javax.swing.JCheckBox chb_drop;
    private javax.swing.JCheckBox chb_insert;
    private javax.swing.JCheckBox chb_select;
    private javax.swing.JLabel img_IS1;
    private javax.swing.JLabel img_MU;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JDialog jd_SQL;
    private javax.swing.JDialog jd_databases;
    private javax.swing.JDialog jd_diagramar;
    private javax.swing.JDialog jd_gestionUsuarios;
    private javax.swing.JDialog jd_menuprincipal;
    private javax.swing.JDialog jd_modificarUsuario;
    private javax.swing.JMenuItem jmi_limpiar;
    private javax.swing.JPanel jp_is;
    private javax.swing.JTree jt_db;
    private javax.swing.JTable jtable_db;
    private javax.swing.JLabel lb_contraGU;
    private javax.swing.JLabel lb_contraMU;
    private javax.swing.JLabel lb_exitDB;
    private javax.swing.JLabel lb_exitGU;
    private javax.swing.JLabel lb_exitIS;
    private javax.swing.JLabel lb_exitMP;
    private javax.swing.JLabel lb_exitMU;
    private javax.swing.JLabel lb_exitSQL;
    private javax.swing.JLabel lb_nombreGU;
    private javax.swing.JLabel lb_nombreIS;
    private javax.swing.JLabel lb_nombreMU;
    private javax.swing.JLabel lb_passwordIS;
    private javax.swing.JLabel lb_permisosGU;
    private javax.swing.JLabel lb_sql;
    private javax.swing.JLabel lb_tituloDB;
    private javax.swing.JLabel lb_tituloGU;
    private javax.swing.JLabel lb_tituloIS;
    private javax.swing.JLabel lb_tituloMP;
    private javax.swing.JLabel lb_tituloMU;
    private javax.swing.JPasswordField pf_contraIS;
    private javax.swing.JPasswordField pf_crear;
    private javax.swing.JPasswordField pf_modificar;
    private javax.swing.JPanel pn_DB;
    private javax.swing.JPanel pn_GU;
    private javax.swing.JPanel pn_exitDB;
    private javax.swing.JPanel pn_exitGU;
    private javax.swing.JPanel pn_exitIS;
    private javax.swing.JPanel pn_exitMP;
    private javax.swing.JPanel pn_exitMU;
    private javax.swing.JPanel pn_exitSQL;
    private javax.swing.JPanel pn_menu;
    private javax.swing.JPanel pn_modificar;
    private javax.swing.JPopupMenu pp_diagramar;
    private javax.swing.JTextField tf_crear;
    private javax.swing.JTextField tf_modificar;
    private javax.swing.JTextField tf_nombreIS;
    private javax.swing.JTextPane tp_sql;
    // End of variables declaration//GEN-END:variables

    String FileSeleccionado;
    StyledDocument doc;
    Style estilo;
    String []keywords ={"CREATE","DROP","SELECT","FROM","WHERE","AND","OR","GRANT","DATABASE","TO","INSERT","INTO","VALUES","TABLE","UPDATE","SET","DELETE","TRUNCATE"};
    String nombre_user;
    String nombre_actual;
    String padre_name;
    DefaultMutableTreeNode nodo_seleccionado;
    File database_seleccionado;
    File table_actual;
    String nombre_db;
    int startX = -1;
    int startY=-1;
    //String nombre_table_actual;
}
